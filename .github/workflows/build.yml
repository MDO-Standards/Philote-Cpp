name: Build and Unit Tests

on:
  push:
    branches:
      - main
      - develop
      - feature/CI
  pull_request:
    branches:
      - main
      - develop

jobs:
  build:
      strategy:
        matrix:
          os: [ubuntu-22.04]
          compiler: [
            # {c: gcc-9, cpp: g++-9},
            # {c: gcc-10, cpp: g++-10},
            # {c: gcc-11, cpp: g++-11},
            {c: gcc-12, cpp: g++-12},
            # {c: clang-12, cpp: clang++-12},
            # {c: clang-13, cpp: clang++-13},
            # {c: clang-14, cpp: clang++-14}
            ]
          build_type: [Release, Debug]
            
      runs-on: ${{ matrix.os }}
      steps:
      - uses: actions/checkout@v2

      # - name: Restore gRPC cache
      #   uses: actions/cache@v2
      #   id: restore-cache
      #   with:
      #     path: $GITHUB_WORKSPACE/grpc-install
      #     key: ${{ runner.os }}-grpc-${{ matrix.compiler.c }}-${{ matrix.build_type }}
          
      # - name: Compile gRPC and protobuf
      #   if: steps.restore-cache.outputs.cache-hit != 'true'
      #   run: |
      #     git clone --recurse-submodules -b v1.53.0 https://github.com/grpc/grpc.git
      #     cd grpc
      #     mkdir -p cmake/build
      #     pushd cmake/build
      #     cmake ../.. -DgRPC_INSTALL=ON -DCMAKE_INSTALL_PREFIX=$GITHUB_WORKSPACE/grpc-install -DCMAKE_C_COMPILER=${{ matrix.compiler.c }} -DCMAKE_CXX_COMPILER=${{ matrix.compiler.cpp }}
      #     make -j$(nproc)
      #     make install
      #     popd

      # - name: Cache gRPC
      #   uses: actions/cache@v2
      #   with:
      #     path: $GITHUB_WORKSPACE/grpc-install
      #     key: ${{ runner.os }}-grpc-${{ matrix.compiler.c }}-${{ matrix.build_type }}


      - name: Install Dependencies
        run: |
          sudo apt-get install -y grpc-proto libgrpc++-dev libgrpc++1
        working-directory: ${{github.workspace}}


      - name: PhiloteCpp Build
        run: |
          mkdir build
          cd build
          cmake .. -DCMAKE_C_COMPILER=${{ matrix.compiler.c }} -DCMAKE_CXX_COMPILER=${{ matrix.compiler.cpp }} -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
          make -j`nproc`
        working-directory: ${{github.workspace}}
